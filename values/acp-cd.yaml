## Example values.yaml file for declarative configuration import using acp-cd Helm Chart
##
## This values.yaml is responsible for importing an Istio Authorizer with its client application,
## and importing policies, API groups and services for the imported authorizer. It assumes that you
## have the httpbin.org deployed behind Istio Service Mesh to get the full scenario working.
##
## For prerequisites and to learn how to import your configuration, see the following:
## * [Declarative configuration import for ACP](https://docs.authorization.cloudentity.com/guides/developer/protect/declarative_configuration/)
## * [Istio Authorizer-specific declarative configuration import](https://docs.authorization.cloudentity.com/guides/developer/protect/istio/configuration_import/)
##
clientCredentials:
  clientID: "{yourClientID}"
  clientSecret: "{yourClientSecret}"
  issuerURL: "https://acp.acp-system:8443/system/system"
data:
  gateways:
    - tenant_id: {aid}
      authorization_server_id: {tid}
      id: sample-istio-authorizer
      client_id: istio-authorizer-client
      client_secret: cf53caab-fb55-40a7-8c63-620ce11102e2
      name: Sample Istio Authorizer
      description: Sample imported Istio Authorizer
      type: istio
      create_and_bind_services_automatically: true
  clients:
    - tenant_id: {tid}
      authorization_server_id: system
      client_id: istio-authorizer-client
      client_secret: cf53caab-fb55-40a7-8c63-620ce11102e2
      token_endpoint_auth_method: client_secret_basic
      trusted: false
      client_name: Istio Authorizer client
      application_type: web
      grant_types:
        - client_credentials
      response_types:
        - code
      scopes:
        - introspect_tokens
        - push_gateway_requests
        - read_gateway_configuration
        - write_gateway_configuration
        - gateway_exchange_tokens
  policies:
    - tenant_id: { tid }
      server_id: { aid }
      id: block_test_policy
      policy_name: block_test
      language: cloudentity
      type: api
      validators:
        - name: "false"
    - tenant_id: { tid }
      server_id: { aid }
      id: allow_test_policy
      policy_name: allow_test
      language: cloudentity
      type: api
      validators:
        - name: "true"
  gateway_api_groups:
    - tenant_id: {tid}
      server_id: {aid}
      id: {{ encSpiffeID "spiffe://cluster.local/ns/default/sa/httpbin" }}
      service_id: httpbin-service
      gateway_id: istio-authorizer
      name: default/httpbin_api_group
      apis:
        - method: GET
          path: /deny
        - method: GET
          path: /anything
  services:
    - id: httpbin-service
      tenant_id: {tid}
      authorization_server_id: {aid}
      gateway_id: istio-authorizer
      name: default/httpbin_service
      apis:
        - method: GET
          path: /deny
          can_have_policy: true
          policy_id: block_test_policy
        - method: GET
          path: /anything
          can_have_policy: true
          policy_id: allow_test_policy
