hazelcast:
  enabled: false
  mancenter:
    enabled: false
cockroachdb:
  enabled: true
  single-node: true
  statefulset:
    replicas: 1
acp:
  enabled: true
  serverURL: "https://acp.acp-system:8443"
  ingress:
    enabled: true
    hosts:
      - host: acp.acp-system
        paths:
          - path: /
    tls:
      - secretName: acp-server-tls
        hosts:
          - acp.acp-system
            pathType: ImplementationSpecific
  features:
    initialize_demo_workspace: true # when enabled and the display_workspace_wizard feature flag is set to true, a demo workspace with a set of preconfigured IDPs is created and no welcome screen is displayed (tenant)
    integration_endpoints: true # enable global import and export configuration endpoints (system)
    admin_workspace_access: true # enable admin workspace access (tenant)
    system_workspace_access: true # enable admin workspace access (tenant)
    dev_mode: false # realod templates and adds local redirects urls to frontend apps (system)
    demo_app: true # enable demo app endpoints (system)
    swagger_ui: true # enable swagger ui (system)
    script_transformer: true # enable the javascript transformer (tenant)
    system_clients_management: true # enable system client management APIs (system)
    pyron_on_prem: false # enable when ACP is running on-prem and Pyron is used as a gateway (tenant)
    client_secrets_stored_as_one_way_hash: false # store client secrets as a one way hash (tenant)
    trust_anchor_integration: false # enable trust anchor integration (system)
    login_with_select_account: true # enable login with select_account param (tenant)
    ciba: true # enable ciba (system)
    mfa: true # enable mfa (tenant)
    quick_access: true # enable quick access functionality on UI (system)
    external_datastore: true # enable external datastore idp (system)
    scripts: false # enable custom scripts (tenant)
    fission_v2: false # fission runtime v2 (tenant)
    gateway_type_standalone: true # enable gateway type standalone (tenant)
  importJob:
    enabled: true
    data:
      clients:
        - tenant_id: default
          authorization_server_id: system
          client_id: c72dkmavg1ajov9nvvjg
          client_secret: 8ZecN12mSG7dWuFsf_ycO-xCi65WJbVxaJHtvnQ_zuM
          client_name: Import Job Client
          token_endpoint_auth_method: client_secret_post
          grant_types:
          - client_credentials
          scopes:
          - manage_configuration
          - read_gateway_configuration
          - write_gateway_configuration
          - push_gateway_requests
          - introspect_tokens
      gateways:
        - tenant_id: system
          authorization_server_id: system
          id: my_test_gateway
          name: My Test Gateway
          type: istio
          client_id: my_test_gateway_client
          last_active: "2021-07-15T12:39:56.099Z"
          create_and_bind_services_automatically: true
      policies:
        - tenant_id: system
          server_id: system
          id: block
          policy_name: block
          language: cloudentity
          type: api
          validators:
          - name: "false"
      services:
        - id: "{{ encServiceID \"spiffe://cluster.local/ns/default/sa/hello\" }}"
          tenant_id: system
          authorization_server_id: system
          gateway_id: my_test_gateway
          name: My Test Service 2
          apis:
            - method: GET
              path: /test
              policy_id: block
              can_have_policy: true
