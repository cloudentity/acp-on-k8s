apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elastic
spec:
  version: 8.11.1 # {"$imagepolicy": "elastic:elastic-agent-image-policy-prod:tag"}
  auth:
    fileRealm:
      - secretName: filerealm
    roles:
      - secretName: elastic-admin-role
      - secretName: elastic-prometheus-role
      - secretName: elastic-setup-role
  monitoring:
    metrics:
      elasticsearchRefs:
        - name: elastic
  secureSettings:
    - secretName: minio-credentials
  nodeSets:
    - name: hot-nodes
      count: 2
      config:
        node.roles:
          [
            master,
            data_content,
            data_hot,
            transform,
            remote_cluster_client,
            ingest,
          ]
        logger.org.elasticsearch: warn
      podTemplate:
        spec:
          serviceAccountName: elastic-sa
          initContainers:
            - name: elastic-internal-init-filesystem
              securityContext:
                privileged: false
                # Required for changing ownership of '/usr/share/elasticsearch/data' on fresh volumes
                runAsUser: 0
                seccompProfile:
                  type: RuntimeDefault
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                  add: ["NET_BIND_SERVICE", "CHOWN", "FOWNER"]
            - name: elastic-internal-suspend
              securityContext:
                privileged: false
                seccompProfile:
                  type: RuntimeDefault
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                  add: ["NET_BIND_SERVICE"]
            - name: sysctl
              securityContext:
                privileged: true
                runAsUser: 0
                seccompProfile:
                  type: RuntimeDefault
                capabilities:
                  drop:
                    - ALL
                  add: ["NET_BIND_SERVICE"]
              command:
                - sh
                - -c
                - sysctl -w vm.max_map_count=262144
            - name: elastic-internal-init-keystore
              securityContext:
                privileged: false
                seccompProfile:
                  type: RuntimeDefault
            - name: minio
              securityContext:
                privileged: true
                runAsUser: 0
                seccompProfile:
                  type: RuntimeDefault
                capabilities:
                  drop:
                    - ALL
                  add: ["NET_BIND_SERVICE"]
              command:
                - sh
                - -c
                - jdk/bin/keytool -import -alias cloudentity -cacerts -storepass changeit -noprompt -file config/http-certs/ca.crt && cp /usr/share/elasticsearch/jdk/lib/security/cacerts /cacerts/cacerts
              volumeMounts:
                - mountPath: /cacerts
                  name: elasticsearch-cacerts
          containers:
            - name: elasticsearch
              env:
                - name: AWS_STS_REGIONAL_ENDPOINTS
                  value: ""
              resources:
                # Production Readiness - Adjust Pod Resources
                requests:
                  cpu: 10m
                  memory: 100Mi
                limits:
                  memory: 2Gi
              securityContext:
                privileged: false
                allowPrivilegeEscalation: false
                runAsUser: 1000
                seccompProfile:
                  type: RuntimeDefault
                capabilities:
                  drop:
                    - ALL
                  add: ["NET_BIND_SERVICE"]
            - name: metricbeat
              securityContext:
                privileged: false
                allowPrivilegeEscalation: false
                runAsUser: 1000
                seccompProfile:
                  type: RuntimeDefault
                capabilities:
                  drop:
                    - ALL
                  add: ["NET_BIND_SERVICE"]
          nodeSelector:
            elastic: "true"
          tolerations:
            - key: elastic
              value: "true"
              effect: NoSchedule
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: elasticsearch.k8s.elastic.co/statefulset-name
                        operator: In
                        values:
                          - elastic-es-hot-nodes
                          - elastic-es-warm-nodes
                          - elastic-es-cold-nodes
                  topologyKey: kubernetes.io/hostname
          securityContext:
            capabilities:
              drop:
                - ALL
              add: ["NET_BIND_SERVICE"]
              runAsNonRoot: true
              runAsUser: 1000
              seccompProfile:
                type: RuntimeDefault
          volumes:
            - name: elasticsearch-cacerts
              emptyDir: {}
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              # Production Readiness - Adjust Pod Resources
              requests:
                storage: 2Gi
            # Production Readiness - Use Proper StorageClass
            storageClassName: standard
  http:
    tls:
      certificate:
        secretName: elastic-tls
