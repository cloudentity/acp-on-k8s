apiVersion: apps/v1
kind: Deployment
metadata:
  name: redisinsight
  labels:
    app.kubernetes.io/instance: redisinsight
    app.kubernetes.io/name: redisinsight
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redisinsight
      app.kubernetes.io/name: redisinsight
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: redisinsight
        app.kubernetes.io/name: redisinsight
    spec:
      serviceAccountName: redisinsight
      securityContext:
        fsGroup: 2000
      containers:
        - name: redisinsight
          image: redis/redisinsight
          ports:
            - name: http
              containerPort: 5540
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
              add: ["CAP_IPC_LOCK"]
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 10Gi
        - name: configure-database
          image: curlimages/curl
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          command:
            - /bin/sh
          args:
            - -c
            - |
              sleep 40 &&
              echo "Checking if RedisInsight is up" &&
              curl -s --fail-with-body -o - -w "\nHTTP Status: %{http_code}\n" -X PATCH -H 'content-type: application/json' -d '{"agreements":{"analytics":false,"notifications":false,"encryption":false,"eula":true}}' http://localhost:5540/api/settings &&
              echo "Configuring RedisInsight database" &&
              curl -s --fail-with-body -o - -w "\nHTTP Status: %{http_code}\n" -H 'content-type: application/json' -d "{\"name\":\"redis-cluster\",\"host\":\"redis-local-redis-cluster.redis\",\"port\":6379,\"db\":0,\"password\":\"$REDIS_PASSWORD\",\"compressor\":\"NONE\",\"timeout\":30000,\"tls\":true,\"verifyServerCert\":true,\"caCert\":{\"name\":\"redisinsight\",\"certificate\":\"$(awk '{printf "%s\\n", $0}' /cert/ca.crt)\"},\"clientCert\":{\"name\":\"redisinsight\",\"certificate\":\"$(awk '{printf "%s\\n", $0}' /cert/tls.crt)\",\"key\":\"$(awk '{printf "%s\\n", $0}' /cert/tls.key)\"}}" http://localhost:5540/api/databases &&
              sleep 604800
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: redis-password
          volumeMounts:
            - name: redis-certificates
              mountPath: /cert
              readOnly: true
      volumes:
        - name: redis-certificates
          secret:
            defaultMode: 256
            secretName: redisinsight-tls
