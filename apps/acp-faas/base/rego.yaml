apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    environmentName: rego
  name: acp-faas-rego
spec:
  # Production Readiness - Adjust Pod Count
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
  selector:
    matchLabels:
      environmentName: rego
  template:
    metadata:
      labels:
        environmentName: rego
    spec:
      imagePullSecrets:
        - name: artifactory
      nodeSelector:
        faas: "true"
      tolerations:
        - key: faas
          value: "true"
          effect: NoSchedule
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              environmentName: rego
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
      securityContext:
        fsGroup: 65535
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: rego-v2
          image: docker.cloudentity.io/rego-env:5.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8888
              name: http-env
              protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 48Mi
            limits:
              cpu: 100m
              memory: 96Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65535
            runAsNonRoot: true
            runAsUser: 65535
            seccompProfile:
              type: RuntimeDefault
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sleep
                  - "1"
          startupProbe:
            failureThreshold: 3
            initialDelaySeconds: 2
            periodSeconds: 2
            httpGet:
              path: /healthz
              port: 8888
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            timeoutSeconds: 1
            httpGet:
              path: /healthz
              port: 8888
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 10
            timeoutSeconds: 1
            httpGet:
              path: /healthz
              port: 8888
