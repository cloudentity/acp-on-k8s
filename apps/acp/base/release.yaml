apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: acp
spec:
  releaseName: acp
  chart:
    spec:
      chart: acp
      sourceRef:
        kind: HelmRepository
        name: acp
        namespace: acp
      version: 2.18.0 # helm:autoupdate:acp-prod
  interval: 5m
  timeout: 20m
  install:
    remediation:
      retries: 3
  # https://github.com/cloudentity/acp-helm-charts/blob/master/charts/acp/values.yaml
  values:
    image:
      repository: docker.cloudentity.io/acp-distroless
    podDisruptionBudget:
      minAvailable: 30%
    ingress:
      ingressClassName: public-nginx
      customAnnotations:
        cert-manager.io/cluster-issuer: "ca-issuer"
      hosts:
        - host: "*.${cluster_region_domain}"
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - secretName: acp-ingress-tls
          hosts:
            - "*.${cluster_region_domain}"
    autoscaling:
      enabled: false
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/name: acp
            topologyKey: kubernetes.io/hostname
    topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: acp
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
    serviceAccount:
      create: true
      name: acp
    args:
      - server
      - start
      - --demo
      - --create-default-tenant
      - --create-default-workspaces
    configPath: /data/config.yaml,/data/extraconfig.yaml,/secret/secret.yaml,/secret/embedded_idps.yaml
    nodeSelector:
      compute: "true"
    tolerations:
      - key: compute
        value: "true"
        effect: NoSchedule
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        memory: 2Gi
    secretConfig:
      create: false
      name: secret
    certManager:
      enabled: true
      commonName: postgres
    serverURL: "https://{{tenantID}}.${cluster_region_domain}:8443"
    sql:
      url: "postgres://acp@cockroachdb-local-public.cockroachdb-${cluster_region}:26257/${cockroachdb_database}?sslcert=%2Ftls%2Ftls.crt&sslkey=%2Ftls%2Ftls.key&sslmode=verify-full&sslrootcert=%2Ftls%2Fca.crt&pool_max_conn_lifetime=3m"
      cockroachdb_use_limit_ordering_for_streaming_group_by: true
    redis:
      enabled: true
      addrs:
        - "redis-local-redis-cluster-headless.redis:6379"
        - "redis-local-redis-cluster-headless.redis:6379"
      redis_search: true
      redis_search_index_name: acp-local
      tls:
        enabled: true
        ca: "/tls/ca.crt"
        key: "/tls/tls.key"
        cert: "/tls/tls.crt"
        insecure_skip_verify: true
      max_retries: 10
      min_retry_backoff: 32
      max_retry_backoff: 1024
    config:
      create: true
      name: acp-data
      data:
        server:
          port: 8443
          grpc_port: 9443
          disable_gzip: false
          client_certificate_header: X-SSL-CERT
          client_auth_type: NoClientCert
          http_metrics_per_tenant: true
          disable_audit_logs_in_stdout: true
          rate_limiting_threshold: 100
        sql:
          max_open_conns: 128
          max_idle_conns: 128
        redis:
          max_backoff_retries: 10
          number_of_workers: 32
          number_of_consumers: 1
          pool_size: 200
          min_idle_conns: 100
          streams:
            disable_trim: false
            max_length: 100000
          consumer_groups:
            refresh_tokens:
              batch_size: 200
            identity:
              batch_size: 200
            audit_logs_timescale:
              batch_size: 400
            gateway:
              batch_size: 200
            webhook:
              batch_size: 400
        timescale:
          enabled: true
        spicedb:
          enabled: true
          url: spicedb.spicedb:50051
          ca: "/tls/ca.crt"
        cache:
          redis_ttl: 20m
          local_ttl: 2m
        fission:
          max_pod_age: 0h
        subject:
          default_format: "hash"
        captcha:
          enabled: true
    migrateJob:
      enabled: true
      configPath: /data/config.yaml,/secret/secret.yaml
      config:
        redis:
          enabled: true
          addrs:
            - "redis-local-redis-cluster-headless.redis:6379"
            - "redis-local-redis-cluster-headless.redis:6379"
          redis_search: true
          redis_search_index_name: acp-local
          tls:
            enabled: true
            ca: "/tls/ca.crt"
            key: "/tls/tls.key"
            cert: "/tls/tls.crt"
            insecure_skip_verify: true
        sql:
          migrations:
            timeout: 30m
        timescale:
          enabled: true
    env:
      - name: DEFAULT_IMPORT_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: client-secret
            key: default-import-client-secret
    importJob:
      enabled: true
      configPath: /data/config.yaml,/data/extraconfig.yaml,/secret/secret.yaml
      data:
        clients:
          - tenant_id: default
            authorization_server_id: system
            client_id: default_import
            client_secret: '{{ env "DEFAULT_IMPORT_CLIENT_SECRET" }}'
            client_name: Import Job Client
            token_endpoint_auth_method: client_secret_post
            grant_types:
              - client_credentials
            scopes:
              - manage_configuration
    workers:
      enabled: true
      service:
        enabled: true
      podDisruptionBudget:
        minAvailable: 30%
      autoscaling:
        enabled: false
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits:
          memory: 2Gi
      nodeSelector:
        compute: "true"
      tolerations:
        - key: compute
          value: "true"
          effect: NoSchedule
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: acp-workers
              topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: acp-workers
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
    fission:
      enabled: true
      idleTimeout: 5m0s
      poolsize: 2
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: fission
                    operator: In
                    values:
                      - "true"
      tolerations:
        - key: fission
          value: "true"
          effect: NoSchedule
      resources:
        requests:
          cpu: 10m
          memory: 48Mi
        limits:
          cpu: 100m
          memory: 96Mi
