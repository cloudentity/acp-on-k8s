kind: ServiceAccount
apiVersion: v1
metadata:
  name: redis-node-sync
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: redis-node-sync
rules:
  - apiGroups: ["apps"]
    resources: ["statefulsets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: redis-node-sync
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: redis-node-sync
subjects:
  - kind: ServiceAccount
    name: redis-node-sync
    namespace: redis
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: redis-node-sync
spec:
  successfulJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  schedule: "3 */2 * * *"
  jobTemplate:
    spec:
      activeDeadlineSeconds: 600
      template:
        spec:
          imagePullSecrets:
            - name: artifactory
          serviceAccountName: redis-node-sync
          restartPolicy: Never
          containers:
            - name: kubectl
              image: bitnami/kubectl:1.32.2
              imagePullPolicy: IfNotPresent
              command:
                - /bin/bash
              args:
                - -c
                - /scripts/node-sync.sh
              volumeMounts:
                - name: scripts
                  mountPath: /scripts
                  readOnly: true
              securityContext:
                runAsUser: 1001
                runAsGroup: 1001
                runAsNonRoot: true
                privileged: false
                readOnlyRootFilesystem: true
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
          volumes:
            - name: scripts
              configMap:
                name: redis-node-sync
                defaultMode: 0755
          tolerations:
            - key: redis
              value: "true"
              effect: NoSchedule
          nodeSelector:
            redis: "true"
          securityContext:
            fsGroup: 1001
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
