apiVersion: batch/v1
kind: Job
metadata:
  name: acp-import-job
  namespace: acp-system
spec:
  backoffLimit: 4
  template:
    spec:
      imagePullSecrets:
        - name: docker.cloudentity.io
      volumes:
        - name: import
          configMap:
            name: acp-import
      containers:
        - name: acp-import
          image: "docker.cloudentity.io/acp:{version}"
          imagePullPolicy: IfNotPresent
          args:
            - import
            - --client-id
            - "$(CLIENT_ID)"
            - --client-secret
            - "$(CLIENT_SECRET)"
            - --issuer-url
            - "$(ISSUER_URL)"
            - --mode
            - update
            - --format
            - yaml
            - --input
            - /import/seed.yaml
          env:
          - name: CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: import-job-secrets
                key: IMPORT_JOB_CLIENT_ID
          - name: CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: import-job-secrets
                key: IMPORT_JOB_CLIENT_SECRET
          - name: ISSUER_URL
            valueFrom:
              secretKeyRef:
                name: import-job-secrets
                key: ISSUER_URL
          volumeMounts:
            - mountPath: /import
              name: import
              readOnly: true
      restartPolicy: Never
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: acp-import
  namespace: acp-system
data:
  seed.yaml: |
    clients:
      - tenant_id: {tid}
        authorization_server_id: system
        client_id: {your_gateway_client_id}
        client_secret: {your_gateway_client_secret}
        client_name: {your_client_display_name}
        token_endpoint_auth_method: client_secret_post
        grant_types:
          - client_credentials
        scopes:
          - read_gateway_configuration
          - write_gateway_configuration
          - push_gateway_requests
          - introspect_tokens
    gateways:
      - tenant_id: {tid}
        authorization_server_id: {aid}
        id: {your_gateway_id}
        name: {your_gateway_display_name}
        type: istio
        client_id: my_local_gateway_client_id
